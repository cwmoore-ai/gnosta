{
  "mcp_servers": {
    "local_servers": [
      {
        "name": "gdrive_mcp_server",
        "path": "./mcp_servers/gdrive_mcp_server",
        "type": "typescript",
        "entry_point": "index.ts",
        "description": "Google Drive MCP server with TypeScript implementation",
        "status": "available",
        "execution": {
          "command": "npm start",
          "working_directory": "./mcp_servers/gdrive_mcp_server"
        }
      }
    ],
    "parent_directory_servers": [
      {
        "name": "quote_mcp_server",
        "path": "../quote-mcp-server",
        "type": "javascript",
        "entry_point": "index.js",
        "description": "HTTP server providing random quotes API",
        "status": "available",
        "execution": {
          "command": "node index.js",
          "working_directory": "../quote-mcp-server",
          "port": 3000,
          "endpoint": "/random-quote"
        }
      },
      {
        "name": "weather_mcp_server",
        "path": "../weather-mcp-server",
        "type": "javascript",
        "entry_point": "index.js",
        "description": "MCP server providing weather information tools",
        "status": "available",
        "execution": {
          "command": "node index.js",
          "working_directory": "../weather-mcp-server",
          "port": 3000,
          "requires_env": ["WEATHER_API_KEY"]
        },
        "tools": ["get-weather"]
      },
      {
        "name": "whatsapp_mcp_server",
        "path": "../whatsapp-mcp/whatsapp-mcp-server",
        "type": "python",
        "entry_point": "main.py",
        "description": "Comprehensive WhatsApp MCP server with messaging capabilities",
        "status": "available",
        "execution": {
          "command": "python main.py",
          "working_directory": "../whatsapp-mcp/whatsapp-mcp-server",
          "transport": "stdio"
        },
        "tools": [
          "search_contacts",
          "list_messages", 
          "list_chats",
          "get_chat",
          "get_direct_chat_by_contact",
          "get_contact_chats",
          "get_last_interaction",
          "get_message_context",
          "send_message",
          "send_file",
          "send_audio_message",
          "download_media"
        ]
      }
    ],
    "configured_servers": [
      {
        "name": "filesystem",
        "command": "mcp-server-filesystem \"C:\\\\Dev\\\\projects\"",
        "description": "Filesystem access server for projects directory"
      },
      {
        "name": "windows_cli",
        "command": "npx -y @modelcontextprotocol/server-windows-cli",
        "description": "Windows CLI command execution server"
      },
      {
        "name": "sequential-thinking",
        "command": "npx -y @modelcontextprotocol/server-sequential-thinking",
        "description": "Sequential thinking and reasoning server"
      },
      {
        "name": "fetch",
        "command": "npx -y @modelcontextprotocol/server-fetch",
        "description": "HTTP fetch and web request server"
      },
      {
        "name": "github",
        "command": "npx -y @modelcontextprotocol/server-github",
        "description": "GitHub integration server"
      },
      {
        "name": "slack",
        "command": "npx -y @modelcontextprotocol/server-slack",
        "description": "Slack integration server with configured tokens",
        "configured_env": {
          "SLACK_BOT_TOKEN": "configured",
          "SLACK_TEAM_ID": "configured", 
          "SLACK_SIGNING_SECRET": "configured"
        }
      }
    ]
  },
  "mcpServers": {
    "redis-local": {
      "description": "Local Redis server (Docker, port 6379, C:\\Dev\\redis-data)",
      "disabled": false,
      "autoApprove": []
    }
  }
}